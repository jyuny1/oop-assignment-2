#BlueJ class context
comment0.target=Glossary()
comment0.text=\nCreate\ a\ new\ Glossary\n\n
comment1.params=label\ definition
comment1.target=boolean\ addTerm(String,\ String)
comment1.text=\nThis\ method\ adds\ a\ new\ term\ to\ the\ termsList\ field\n@param\ label\ \ the\ new\ term\ to\ be\ added\n@param\ definition\ \ the\ terms\ definition\n@return\ true\ if\ the\ term\ didn't\ exist\ and\ could\ be\ added,\nfalse\ otherwise\n\n
comment2.params=label
comment2.target=boolean\ termExists(String)
comment2.text=\nThis\ method\ returns\ true\ if\ the\ parameter\ exists\ in\ the\ list\ of\nterms,\ false\ otherwise.\n@param\ label\ phrase\ to\ look\ for\ in\ the\ termsList\ field\n@return\ true\ if\ the\ term\ already\ exists,\ false\ otherwise\n\n
comment3.params=label
comment3.target=String\ getTermDefinition(String)
comment3.text=\nThis\ method\ returns\ the\ definition\ of\ a\ term\n@param\ label\ \ word\ to\ look\ for\ in\ the\ termsList\ field\n@return\ the\ string\ containing\ the\ term's\ definition\n\n
comment4.params=label
comment4.target=void\ addTermToLexicon(String)
comment4.text=\nThis\ method\ adds\ the\ words\ from\ a\ term\ to\ the\ lexicon\ field\n@param\ label\ \ the\ label\ of\ the\ term\ to\ add\n\n
comment5.params=label
comment5.target=ArrayList<String>\ getSimilarPhrases(String)
comment5.text=\nThis\ method\ retrieves\ phrases\ from\ the\ lexicon\ which\ are\ similar\nto\ the\ one\ specified\ as\ parameter\n@param\ label\ the\ label\ of\ the\ term\ taken\ as\ a\ base\ in\ the\ \ \nsearch\ for\ alternative\ phrases\n@return\ an\ ArrayList\ containing\ the\ alternative\ phrases\n\n
comment6.params=words\ phrases
comment6.target=ArrayList<String>\ includeWords(ArrayList<String>,\ ArrayList<String>)
comment6.text=\nThis\ method\ includes\ words\ at\ the\ end\ of\ phrases.\ Each\ element\ of\ a\nlist\ of\ words\ is\ included\ at\ the\ end\ of\ a\ phrase,\ generating\ as\ many\nphrases\ as\ there\ are\ words\ in\ the\ list\ of\ words.\ This\ process\ is\ \nrepeated\ for\ all\ the\ phrases\ in\ the\ list\ of\ phrases.\n@param\ words\ \ a\ list\ of\ words\ to\ be\ included\ into\ the\ phrases\n@param\ phrases\ \ a\ list\ of\ phrases\ to\ be\ modified\ by\ the\ inclusion\ of\nnew\ words\n@return\ an\ ArrayList\ containing\ the\ modified\ phrases\n\n
comment7.params=label
comment7.target=ArrayList<String>\ getSimilarTerms(String)
comment7.text=\nThis\ method\ retrieves\ terms\ from\ termList\ which\ are\ similar\nto\ the\ one\ specified\ as\ parameter\n@param\ label\ the\ label\ of\ the\ term\ taken\ as\ a\ base\ in\ the\ \ \nsearch\ for\ alternative\ phrases\n@return\ an\ ArrayList\ containing\ the\ alternative\ terms\n\n
numComments=8
